{"version":3,"sources":["core/components/step-nav-btns.js","core/components/address-block.js","core/components/progress-bar.js","core/components/label.js","core/components/ship-method-block.js","core/components/weight-block.js","core/components/welcome-prompt.js","core/components/navbar.js","core/components/us-states-dropdown.js","core/components/wizard/wizard.js","utils/variables.js","features/shipping-label-maker/shipping-label-maker.js","utils/functions.js","features/shipping-label-maker/address-form.js","features/shipping-label-maker/weight-form.js","features/shipping-label-maker/ship-option-form.js","features/shipping-label-maker/confirm-summary.js","features/shipping-label-maker/auth-form.js","core/components/higher-order-comp/withAuth.js","App.js","serviceWorker.js","index.js"],"names":["StepNavBtns","_ref","onAction","currentStep","handleSubmit","react_default","a","createElement","className","onClick","type","AddressBlock","details","direction","name","street","city","state","zip","ProgressBar","currentProgress","role","aria-valuemin","aria-valuemax","style","width","concat","combineAddressRow","addressee","Label","wizardContext","sender","from","receiver","to","window","print","weight","shippingOption","ShipMethodBlock","WeightBlock","WelcomePrompt","handleClick","NavBar","labelCompleted","showWizard","UsStatesDropdown","Fragment","map","value","Wizard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","action","lastStep","steps","length","setState","onComplete","_this$props","header","updateContext","progress_bar","address_form_AddressForm","title","weight_form_WeightForm","ship_option_form_ShipOptionForm","confirm_summary_ConfirmSummary","Component","populatedWizardContext","ShippingLabelMaker","RegExp","newContextDetails","navbar","wizard_Wizard","label","validateInput","obj","key","AddressForm","handleChange","e","defineProperty","target","_this$props2","_this$props3","htmlFor","id","onChange","required","disabled","us_states_dropdown","step_nav_btns","WeightForm","parseInt","isNaN","min","max","ShipOptionForm","checked","ConfirmSummary","shippingCost","totalCost","shippingRate","ground","toFixed","address_block","ship_method_block","weight_block","AuthForm","username","password","onSubmit","withAuth","isAuthenticated","ProtectedComponent","_Component","apply","arguments","inherits","createClass","isLoggedIn","App","started","preventDefault","_this$state","ProtectedLabelMaker","welcome_prompt","auth_form","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90a5382f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst StepNavBtns = ({ onAction, currentStep, handleSubmit }) => {\n  return (\n    <div>\n      {currentStep === 0 ? null : (\n        <button\n          className=\"btn btn-warning wizard__buttons-prev\"\n          onClick={() => onAction(\"prev\")}\n        >\n          &#10094; Prev\n        </button>\n      )}\n\n      {currentStep === 4 ? (\n        <button\n          className=\"btn btn-secondary\"\n          onClick={() => handleSubmit()}\n          type=\"submit\"\n        >\n          Generate Label\n        </button>\n      ) : (\n        <button\n          className=\"btn btn-warning\"\n          onClick={() => handleSubmit()}\n          type=\"submit\"\n        >\n          Next &#10095;\n        </button>\n      )}\n    </div>\n  );\n};\n\nStepNavBtns.propTypes = {\n  onAction: PropTypes.func.isRequired,\n  currentStep: PropTypes.number.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default StepNavBtns;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddressBlock = ({ details, direction }) => {\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"underline\">{direction}</div>\n      <div className=\"row\">\n        <div className=\"col-md-3 col-sm-3\">Name:</div>\n        <div className=\"col-md-9 col-sm-9\">{details.name}</div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-3 col-sm-3\">Street: </div>\n        <div className=\"col-md-9 col-sm-9\">{details.street}</div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-3 col-sm-3\">City:</div>\n        <div className=\"col-md-9 col-sm-9\">{details.city}</div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-3 col-sm-3\">State:</div>\n        <div className=\"col-md-9 col-sm-9\">{details.state}</div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-3 col-sm-3\">Zip:</div>\n        <div className=\"col-md-9 col-sm-9\">{details.zip}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddressBlock;\n\nAddressBlock.propTypes = {\n  details: PropTypes.object.isRequired,\n  direction: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProgressBar = ({ currentProgress }) => {\n  return (\n    <div className=\"progress wizard__progress\">\n      <div\n        className=\"progress-bar progress-bar-animated progress-bar-striped bg-info\"\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        style={{ width: `${currentProgress}%` }}\n      />\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  currentProgress: PropTypes.number.isRequired\n};\n\nexport default ProgressBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst combineAddressRow = addressee => {\n  return `${addressee.city} ${addressee.state}, ${addressee.zip}`;\n};\n\nconst Label = ({ wizardContext }) => {\n  const sender = wizardContext.from;\n  const receiver = wizardContext.to;\n\n  return (\n    <div className=\"container label__container\">\n      <div className=\"label__header\">\n        <button\n          className=\"btn btn-info margin-right-small\"\n          onClick={() => window.print()}\n        >\n          Print\n        </button>\n        Cut out and paste label on your package.\n      </div>\n\n      <div className=\"label__sticker\">\n        <div className=\"row\">\n          <div className=\"col-md-8 col-sm-8 col-xs-8\">\n            <div>SHIP FROM:</div>\n            <div>{sender.name}</div>\n            <div>{sender.street}</div>\n            <div>{combineAddressRow(sender)}</div>\n          </div>\n          <div className=\"col-md-4 col-sm-4 col-xs-4 center font-large right\">\n            {wizardContext.weight} LBS\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-3 col-sm-4 col-xs-3\" />\n          <div className=\"col-md-1 col-sm-1 col-xs-1 \">SHIP TO:</div>\n          <div className=\"col-md-4 col-sm-4 col-xs-4 center\">\n            <div>{receiver.name}</div>\n            <div>{receiver.street}</div>\n            <div>{combineAddressRow(receiver)}</div>\n          </div>\n          <div className=\"col-md-4 col-sm-3 col-xs-4\" />\n        </div>\n        <hr />\n        <div className=\"row label__option\">\n          <div className=\"col-md-4 \">\n            {wizardContext.shippingOption === \"1\" ? \"GROUND\" : \"PRIORITY\"}\n          </div>\n          <div className=\"col-md-8 right\">{combineAddressRow(receiver)}</div>\n        </div>\n        <div className=\"row\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Label;\n\nLabel.propTypes = {\n  wizardContext: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ShipMethodBlock = ({ shippingOption }) => {\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"row\">\n        <div className=\"col-md-3 col-sm-3\">Method: </div>\n        <div className=\"col-md-9 col-sm-9\">\n          {shippingOption === \"1\" ? \"Ground\" : \"Priority\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShipMethodBlock.propTypes = {\n  shippingOption: PropTypes.string.isRequired\n};\n\nexport default ShipMethodBlock;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst WeightBlock = ({ weight }) => {\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"row\">\n        <div className=\"col-md-3 col-sm-3\">Weight: </div>\n        <div className=\"col-md-9 col-sm-9\">{weight} lbs</div>\n      </div>\n    </div>\n  );\n};\n\nWeightBlock.propTypes = {\n  weight: PropTypes.string.isRequired\n};\n\nexport default WeightBlock;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst WelcomePrompt = ({ handleClick }) => {\n  return (\n    <div className=\"jumbotron welcome\">\n      <h1 className=\"display-4\">Welcome!</h1>\n      <p className=\"lead\">\n        This is a simple Form Wizard where you can plug in your shipping\n        information and our Wizard will handle the rest.\n      </p>\n      <button className=\"btn btn-info\" onClick={handleClick}>\n        Get Started\n      </button>\n    </div>\n  );\n};\n\nWelcomePrompt.propTypes = {\n  handleClick: PropTypes.func.isRequired\n};\n\nexport default WelcomePrompt;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst NavBar = ({ handleClick, labelCompleted, showWizard }) => {\n  return (\n    <header>\n      <nav className=\"navbar\">\n        <div className=\"navbar__logo\">Shipping Label Maker</div>\n        <div className=\"navbar__button\">\n          {labelCompleted ? (\n            <button className=\"btn btn-light\" onClick={handleClick}>\n              {showWizard ? \"View Label\" : \"Back to Wizard\"}\n            </button>\n          ) : null}\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavBar;\n\nNavBar.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  labelCompleted: PropTypes.bool.isRequired,\n  showWizard: PropTypes.bool.isRequired\n};\n","import React from \"react\";\n\nconst UsStatesDropdown = () => {\n  const usStates = [ \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \n    \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \n    \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"\n  ]\n  return (\n    <React.Fragment>\n      {usStates.map(state => <option value={state}>{state}</option>)}\n    </React.Fragment>\n  );\n};\n\nexport default UsStatesDropdown;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  AddressForm,\n  WeightForm,\n  ShipOptionForm,\n  ConfirmSummary\n} from \"../../../features/shipping-label-maker\";\nimport { ProgressBar } from \"../../components\";\n\n// The heart of the app is a “Wizard” component whose primary responsibility\n// is to receive a series of steps from its parent and sequencing through them.\nexport default class Wizard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 0\n    };\n    this.onAction = this.onAction.bind(this);\n  }\n\n  onAction(action) {\n    // The step components will instruct the wizard to move\n    // forward or backwards, or end the wizard.\n    const { currentStep } = this.state;\n    const lastStep = this.props.steps.length - 1;\n    if (action === \"prev\" && currentStep > 0) {\n      this.setState({ currentStep: currentStep - 1 });\n    } else if (action === \"next\" && currentStep < lastStep) {\n      this.setState({ currentStep: currentStep + 1 });\n    } else if (action === \"end\" && currentStep === 4) {\n      this.props.onComplete();\n      this.setState({ currentStep: this.props.steps.length - 1 });\n    }\n  }\n\n  render() {\n    const { header, steps, wizardContext, updateContext } = this.props;\n    const currentProgress = ((this.state.currentStep + 1) / steps.length) * 100;\n\n    return (\n      <main className=\"container wizard__container\">\n        <div className=\"wizard__header\">\n          <i className=\"fas fa-magic wizard__header-icon\" />\n          <span className=\"wizard__header-text\">Label Wizard</span>\n        </div>\n        <ProgressBar currentProgress={currentProgress} />\n        {this.state.currentStep === 0 ? (\n          <AddressForm\n            addressee=\"sender\"\n            wizardContext={wizardContext}\n            onAction={this.onAction}\n            updateContext={updateContext}\n            title={header(this.state.currentStep)}\n          />\n        ) : null}\n        {this.state.currentStep === 1 ? (\n          <AddressForm\n            addressee=\"receiver\"\n            wizardContext={wizardContext}\n            onAction={this.onAction}\n            updateContext={updateContext}\n            title={header(this.state.currentStep)}\n          />\n        ) : null}\n        {this.state.currentStep === 2 ? (\n          <WeightForm\n            wizardContext={wizardContext}\n            onAction={this.onAction}\n            updateContext={updateContext}\n            title={header(this.state.currentStep)}\n          />\n        ) : null}\n        {this.state.currentStep === 3 ? (\n          <ShipOptionForm\n            wizardContext={wizardContext}\n            onAction={this.onAction}\n            updateContext={updateContext}\n            title={header(this.state.currentStep)}\n          />\n        ) : null}\n        {this.state.currentStep === 4 ? (\n          <ConfirmSummary\n            wizardContext={wizardContext}\n            onAction={this.onAction}\n            updateContext={updateContext}\n            title={header(this.state.currentStep)}\n          />\n        ) : null}\n      </main>\n    );\n  }\n}\n\nWizard.propTypes = {\n  header: PropTypes.func.isRequired,\n  steps: PropTypes.array.isRequired,\n  wizardContext: PropTypes.object.isRequired,\n  onComplete: PropTypes.func.isRequired,\n  updateContext: PropTypes.func.isRequired\n};\n","// Helper variables\n\n// Starting state\nexport const defaultWizardContext = {\n  from: {\n    name: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\"\n  },\n  to: {\n    name: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\"\n  },\n  weight: \"1\", //defaults to 1 lb\n  shippingOption: \"1\" //defaults to ground shipping\n};\n\nexport const populatedWizardContext = {\n  //for Testing\n  from: {\n    name: \"John Smith\",\n    street: \"131 Dartmouth St\",\n    city: \"Boston\",\n    state: \"MA\",\n    zip: \"02116\"\n  },\n  to: {\n    name: \"Linda Jackson\",\n    street: \"40 Fulton St\",\n    city: \"New York\",\n    state: \"NY\",\n    zip: \"10038\"\n  },\n  weight: \"20\",\n  shippingOption: \"1\"\n};\n\n// Used for navigation between steps\n// Used in all step components\nexport const WizardAction = {\n  prev: 1,\n  next: 2,\n  end: 3\n};\n\n// Used in step 4 (ShipOption)\nexport const ShippingOption = {\n  ground: 1,\n  priority: 2\n};\n\n// Used in step 5 (ConfirmSummary)\n// Used in conjunction with shippingCost fn\nexport const shippingRate = 0.4;\n\n// Regex\n\n// Validate a ZIP code (U.S. postal code), allowing both formats:\n// five-digit 12345\n// nine-digit (called ZIP+4) 12345-6789\nexport const zipValidator = new RegExp(\"^[0-9]{5}(?:-[0-9]{4})?$\");\n","import React, { Component } from \"react\";\nimport { Wizard } from \"../../core/components/wizard\";\nimport { Label, NavBar } from \"../../core/components\";\nimport {\n  // eslint-disable-next-line\n  defaultWizardContext,\n  // eslint-disable-next-line\n  populatedWizardContext //for testing\n} from \"../../utils/variables\";\n\n// ShippingLabelMaker -> Wizard -> Each Step\nexport default class ShippingLabelMaker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // wizardContext: defaultWizardContext, // for production\n      wizardContext: populatedWizardContext, // for tesing\n      steps: [\n        \"Input Sender's Details\",\n        \"Input Receiver's Details\",\n        \"Input Package Weight\",\n        \"Select Shipping Option\",\n        \"Review Details For Confirmation\"\n      ],\n      showWizard: true,\n      labelCompleted: false\n    };\n    this.onComplete = this.onComplete.bind(this);\n    this.header = this.header.bind(this);\n    this.updateContext = this.updateContext.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  header(currentStep) {\n    // Creates titles/header for current step\n    return `Step ${currentStep + 1}: ${this.state.steps[currentStep]}`;\n  }\n\n  onComplete() {\n    // Present label when steps are done\n    this.setState({ labelCompleted: true, showWizard: false });\n  }\n\n  updateContext(newContextDetails) {\n    // Method to allow steps to setState on ShippingLabelMaker Component\n    this.setState({ wizardContext: newContextDetails });\n  }\n\n  handleClick() {\n    // Toggles between Label and Wizard button to see respective views\n    this.setState({ showWizard: !this.state.showWizard });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          handleClick={this.handleClick}\n          labelCompleted={this.state.labelCompleted}\n          showWizard={this.state.showWizard}\n        />\n        {this.state.showWizard ? (\n          <Wizard\n            className=\"container\"\n            header={this.header}\n            steps={this.state.steps}\n            wizardContext={this.state.wizardContext}\n            onComplete={this.onComplete}\n            updateContext={this.updateContext}\n          />\n        ) : (\n          <Label wizardContext={this.state.wizardContext} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// Helper functions\n\nexport const shippingCost = (weight, shippingRate, shippingOption) => {\n  return (\n    weight *\n    shippingRate *\n    (shippingOption === shippingOption.ground ? 1 : 1.5)\n  ).toFixed(2);\n};\n\nexport const validateInput = obj => {\n  for (const key in obj) {\n    if (typeof obj[key] === \"function\") {\n      const nestedObj = obj[key];\n      validateInput(nestedObj);\n    } else if (obj[key] === \"\") {\n      return false;\n    }\n  }\n  return true;\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StepNavBtns, UsStatesDropdown } from \"../../core/components\";\nimport { validateInput } from \"../../utils\";\n\nexport default class AddressForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      street: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  //Every time a form component is mounted, the previous answers are loaded\n  componentDidMount() {\n    const { wizardContext, addressee } = this.props;\n    addressee === \"sender\"\n      ? this.setState(wizardContext.from)\n      : this.setState(wizardContext.to);\n  }\n\n  //Changes are not reflected immediately on wizardContext\n  //Changes are only reflected on the state of this component\n  handleChange(e) {\n    //Type validations can go here\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  //Submit answers to reflect changes on wizardContext\n  handleSubmit() {\n    const { wizardContext, addressee, updateContext, onAction } = this.props;\n    //1a) Validate input [Additional regex validations can go here (as necessary)]\n    if (validateInput(this.state)) {\n      //2) Construct payload to pass back to ShippingLabelMaker (parent)\n      if (addressee === \"sender\") wizardContext.from = this.state;\n      else wizardContext.to = this.state;\n      //3) Save new answers to parent's state\n      updateContext(wizardContext);\n      //4) Then, allow onAction to navigate away\n      onAction(\"next\");\n    }\n    //1b) If input is invalid, browser validation messages appear\n  }\n\n  render() {\n    const { title, onAction, addressee } = this.props;\n    return (\n      <section className=\"wizard__step\">\n        <div className=\"wizard__step-header\">{title}</div>\n        <form>\n          <div className=\"wizard__step-form\">\n            <div className=\"form-row\">\n              <div className=\"col-md-4 mb-3\">\n                <label htmlFor=\"full-name\">Full Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"full-name\"\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <div className=\"col-md-8 mb-3\">\n                <label htmlFor=\"Street\">Street</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"Street\"\n                  name=\"street\"\n                  value={this.state.street}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"col-md-5 mb-3\">\n                <label htmlFor=\"city\">City</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"city\"\n                  name=\"city\"\n                  value={this.state.city}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <div className=\"col-md-4 mb-3\">\n                <label htmlFor=\"state\">State</label>\n                <select\n                  className=\"form-control\"\n                  id=\"state\"\n                  name=\"state\"\n                  value={this.state.state}\n                  onChange={this.handleChange}\n                  required\n                >\n                  <option disabled>Choose...</option>\n                  <UsStatesDropdown />\n                </select>\n              </div>\n              <div className=\"col-md-3 mb-3\">\n                <label htmlFor=\"zip\">Zip</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"zip\"\n                  name=\"zip\"\n                  value={this.state.zip}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n            </div>\n          </div>\n          {addressee === \"sender\" ? (\n            <StepNavBtns\n              currentStep={0}\n              onAction={onAction}\n              handleSubmit={this.handleSubmit}\n            />\n          ) : (\n            <StepNavBtns\n              currentStep={1}\n              onAction={onAction}\n              handleSubmit={this.handleSubmit}\n            />\n          )}\n        </form>\n      </section>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  wizardContext: PropTypes.object.isRequired,\n  onAction: PropTypes.func.isRequired,\n  addressee: PropTypes.string.isRequired,\n  updateContext: PropTypes.func.isRequired\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StepNavBtns } from \"../../core/components\";\n\nexport default class WeightForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weight: \"1\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ weight: this.props.wizardContext.weight });\n  }\n\n  handleChange(e) {\n    //Type validations can go here\n    if (parseInt(e.target.value) > 1000) return;\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit() {\n    //This method provides flexibility to do any\n    //final validation before form is submitted (as necessary)\n    const { wizardContext, updateContext, onAction } = this.props;\n    if (!isNaN(parseInt(this.state.weight))) {\n      wizardContext.weight = this.state.weight;\n      updateContext(wizardContext);\n      onAction(\"next\");\n    }\n  }\n\n  render() {\n    const { title, onAction } = this.props;\n    return (\n      <section className=\"wizard__step\">\n        <div className=\"wizard__step-header\">{title}</div>\n        <form>\n          <div className=\"wizard__step-form\">\n            <label htmlFor=\"weight\">\n              <span>Pounds (Lbs)</span>\n            </label>\n            <input\n              type=\"number\"\n              className=\"form-control col-md-2\"\n              name=\"weight\"\n              id=\"weight\"\n              min=\"1\"\n              max=\"1000\"\n              onChange={this.handleChange}\n              value={this.state.weight}\n              required\n            />\n          </div>\n          <StepNavBtns\n            currentStep={2}\n            onAction={onAction}\n            handleSubmit={this.handleSubmit}\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nWeightForm.propTypes = {\n  wizardContext: PropTypes.object.isRequired,\n  onAction: PropTypes.func.isRequired,\n  updateContext: PropTypes.func.isRequired\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StepNavBtns } from \"../../core/components\";\n\nexport default class ShipOptionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shippingOption: \"1\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ shippingOption: this.props.wizardContext.shippingOption });\n  }\n\n  handleChange(e) {\n    //Type validations can go here\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit() {\n    //This method provides flexibility to do any\n    //final validation before form is submitted (as necessary)\n    const { wizardContext, updateContext, onAction } = this.props;\n    if (!isNaN(parseInt(this.state.shippingOption))) {\n      wizardContext.shippingOption = this.state.shippingOption;\n      updateContext(wizardContext);\n      onAction(\"next\");\n    }\n  }\n\n  render() {\n    const { title, onAction } = this.props;\n    return (\n      <section className=\"wizard__step\">\n        <div className=\"wizard__step-header\">{title}</div>\n        <form>\n          <div className=\"wizard__step-form\">\n            <div className=\"form-check\">\n              <input\n                id=\"ground\"\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"shippingOption\"\n                onChange={this.handleChange}\n                checked={this.state.shippingOption === \"1\"}\n                value={\"1\"}\n              />\n              <label className=\"form-check-label\" htmlFor=\"ground\">\n                Ground\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                id=\"priority\"\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"shippingOption\"\n                onChange={this.handleChange}\n                checked={this.state.shippingOption === \"2\"}\n                value={\"2\"}\n              />\n              <label className=\"form-check-label\" htmlFor=\"priority\">\n                Priority\n              </label>\n            </div>\n          </div>\n          <StepNavBtns\n            currentStep={3}\n            onAction={onAction}\n            handleSubmit={this.handleSubmit}\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nShipOptionForm.propTypes = {\n  wizardContext: PropTypes.object.isRequired,\n  onAction: PropTypes.func.isRequired,\n  updateContext: PropTypes.func.isRequired\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  StepNavBtns,\n  AddressBlock,\n  ShipMethodBlock,\n  WeightBlock\n} from \"../../core/components\";\nimport { shippingCost, shippingRate, validateInput } from \"../../utils\";\n\nexport default class ConfirmSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shippingCost: 0\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const totalCost = shippingCost(\n      this.props.wizardContext.weight,\n      shippingRate,\n      this.props.wizardContext.shippingOption\n    );\n    this.setState({ shippingCost: totalCost });\n  }\n\n  handleSubmit() {\n    //This method provides flexibility to do any\n    //final validation before form is submitted (as necessary)\n    if (validateInput(this.props.wizardContext)) {\n      this.props.onAction(\"end\");\n    }\n  }\n\n  render() {\n    const { title, onAction, wizardContext } = this.props;\n    return (\n      <section className=\"wizard__step\">\n        <div className=\"wizard__step-header\">{title}</div>\n        <form>\n          <div className=\"wizard__step-form\">\n            <div className=\"row\">\n              <AddressBlock\n                details={wizardContext.from}\n                direction=\"Send From\"\n              />\n              <AddressBlock details={wizardContext.to} direction=\"Deliver To\" />\n            </div>\n            <div className=\"row\">\n              <ShipMethodBlock shippingOption={wizardContext.shippingOption} />\n              <WeightBlock weight={wizardContext.weight} />\n            </div>\n            <div className=\"row wizard__step-cost\">\n              <div className=\"col-md-6\">\n                <div className=\"row\">\n                  <div className=\"col-md-3 col-sm-3\">Cost:</div>\n                  <div className=\"col-md-9 col-sm-9\">\n                    ${this.state.shippingCost}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <StepNavBtns\n            onAction={onAction}\n            currentStep={4}\n            handleSubmit={this.handleSubmit}\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nConfirmSummary.propTypes = {\n  wizardContext: PropTypes.object.isRequired,\n  onAction: PropTypes.func.isRequired,\n  updateContext: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AuthForm = ({ username, password, handleChange, handleSubmit }) => {\n  return (\n    <div className=\"auth__container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"margin-bottom-small \">\n          But first! Please sign in. Simply fill in both username and password\n          with anything to log in.\n        </div>\n        <div className=\"input-group input-group-sm mb-3 \">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\n              Username\n            </span>\n          </div>\n          <input\n            type=\"username\"\n            className=\"form-control\"\n            name=\"username\"\n            onChange={handleChange}\n            value={username}\n            required\n          />\n        </div>\n        <div className=\"input-group input-group-sm mb-3 \">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\n              Password\n            </span>\n          </div>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={password}\n            required\n          />\n        </div>\n        <div className=\"\">\n          <button className=\"btn btn-secondary\" type=\"submit\">\n            Ready to see the wizard\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nAuthForm.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default AuthForm;\n","import React, { Component } from \"react\";\n\nconst withAuth = isAuthenticated => ProtectedComponent => {\n  return class withAuth extends Component {\n    isLoggedIn() {\n      return isAuthenticated;\n    }\n\n    render() {\n      return this.isLoggedIn() ? <ProtectedComponent /> : null;\n    }\n  };\n};\n\nexport default withAuth;\n","import React, { Component } from \"react\";\nimport \"./app.scss\";\nimport { WelcomePrompt } from \"./core/components\";\nimport { AuthForm, ShippingLabelMaker } from \"./features/shipping-label-maker\";\nimport { validateInput } from \"../src/utils\";\nimport { withAuth } from \"../src/core/components/higher-order-comp\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      started: false,\n      username: \"\",\n      password: \"\",\n      isAuthenticated: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ started: true });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { username, password } = this.state;\n    if (validateInput({ username, password })) {\n      this.setState({ isAuthenticated: true });\n    }\n  }\n\n  render() {\n    const ProtectedLabelMaker = withAuth(this.state.isAuthenticated)(\n      ShippingLabelMaker\n    );\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          {this.state.started ? null : (\n            <WelcomePrompt handleClick={this.handleClick} />\n          )}\n          {this.state.started && !this.state.isAuthenticated ? (\n            <AuthForm\n              username={this.state.username}\n              password={this.state.password}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n            />\n          ) : null}\n          <ProtectedLabelMaker />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}